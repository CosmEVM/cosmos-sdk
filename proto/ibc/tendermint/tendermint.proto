syntax = "proto3";
package ibc.tendermint;

option go_package = "github.com/cosmos/cosmos-sdk/x/ibc/07-tendermint/types";

import "gogoproto/gogo.proto";
import "third_party/proto/tendermint/proto/types/types.proto";
import "third_party/proto/confio/proofs.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "ibc/commitment/commitment.proto";

// MsgCreateClient defines a message to create a tendermint client state.
message MsgCreateClient {
  option (gogoproto.goproto_getters) = false;

  string client_id = 1 [
    (gogoproto.customname) = "ClientID",
    (gogoproto.moretags)   = "yaml:\"client_id\""
  ];
  Header header = 2 [
    (gogoproto.nullable) = false
  ];
  Fraction trust_level = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"trust_level\""
  ];
  google.protobuf.Duration trusting_period = 4 [
    (gogoproto.nullable)    = false,
    (gogoproto.stdduration) = true,
    (gogoproto.moretags)    = "yaml:\"trusting_period\""
  ];
  google.protobuf.Duration unbonding_period = 5 [
    (gogoproto.nullable)    = false,
    (gogoproto.stdduration) = true,
    (gogoproto.moretags)    = "yaml:\"unbonding_period\""
  ];
  google.protobuf.Duration max_clock_drift = 6 [
    (gogoproto.nullable)    = false,
    (gogoproto.stdduration) = true,
    (gogoproto.moretags)    = "yaml:\"max_clock_drift\""
  ];
  bytes signer = 7 [
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"
  ];
}

// MsgCreateClient defines an sdk.Msg to update a tendermint client state to
// the given header.
message MsgUpdateClient {
  option (gogoproto.goproto_getters) = false;

  string client_id = 1 [
    (gogoproto.customname) = "ClientID",
    (gogoproto.moretags)   = "yaml:\"client_id\""
  ];
  Header header = 2 [
    (gogoproto.nullable) = false
  ];
  bytes signer = 3 [
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"
  ];
}

// MsgSubmitClientMisbehaviour defines an sdk.Msg type that submits Evidence for
// light client misbehaviour.
message MsgSubmitClientMisbehaviour {
  option (gogoproto.goproto_getters) = false;

  Evidence evidence  = 1;
  bytes    submitter = 2 [
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"
  ];
}

// ClientState from Tendermint tracks the current validator set, latest height,
// and a possible frozen height.
message ClientState {
  option (gogoproto.goproto_getters) = false;
  // client id
  string   id          = 1 [(gogoproto.customname) = "ID"];
  Fraction trust_level = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"trust_level\""
  ];
  // duration of the period since the LastestTimestamp during which the submitted
  // headers are valid for upgrade
  google.protobuf.Duration trusting_period = 3 [
    (gogoproto.nullable)    = false,
    (gogoproto.stdduration) = true,
    (gogoproto.moretags)    = "yaml:\"trusting_period\""
  ];
  // duration of the staking unbonding period
  google.protobuf.Duration unbonding_period = 4 [
    (gogoproto.nullable)    = false,
    (gogoproto.stdduration) = true,
    (gogoproto.moretags)    = "yaml:\"unbonding_period\""
  ];
  // defines how much new (untrusted) header's Time can drift into the future.
  google.protobuf.Duration max_clock_drift = 5 [
    (gogoproto.nullable)    = false,
    (gogoproto.stdduration) = true,
    (gogoproto.moretags)    = "yaml:\"max_clock_drift\""
  ];
  // Block height when the client was frozen due to a misbehaviour
  uint64 frozen_height = 6 [
    (gogoproto.moretags) = "yaml:\"frozen_height\""
  ];
  // Last Header that was stored by the client
  Header last_header = 7 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"last_header\""
  ];
  repeated ics23.ProofSpec proof_specs = 8 [
    (gogoproto.moretags) = "yaml:\"proof_specs\""
  ];
}

// ConsensusState defines the consensus state from Tendermint.
message ConsensusState {
  option (gogoproto.goproto_getters) = false;

  // timestamp that corresponds to the block height in which the ConsensusState
  // was stored.
  google.protobuf.Timestamp timestamp = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime)  = true
  ];
  // commitment root (i.e app hash)
  ibc.commitment.MerkleRoot root = 2 [
    (gogoproto.nullable) = false
  ];
  // height at which the consensus state was stored.
  uint64                               height        = 3;
  .tendermint.proto.types.ValidatorSet validator_set = 4 [
    (gogoproto.moretags) = "yaml:\"validator_set\""
  ];
}

// Evidence defines two distinct headers at the same hight, chain id and client.
// It is used to verify and penalize light client misbehaviour.
message Evidence {
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = false;

  string client_id = 1 [
    (gogoproto.customname) = "ClientID",
    (gogoproto.moretags)   = "yaml:\"client_id\""
  ];
  string chain_id = 2 [
    (gogoproto.customname) = "ChainID",
    (gogoproto.moretags)   = "yaml:\"chain_id\""
  ];
  Header header_1 = 3 [
    (gogoproto.customname) = "Header1",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"header_1\""
  ];
  Header header_2 = 4 [
    (gogoproto.customname) = "Header2",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"header_2\""
  ];
}

// Header defines a tendermint signed header and the validator set that
// corresponds to the header.
message Header {
  .tendermint.proto.types.SignedHeader signed_header = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"signed_header\""
  ];

  .tendermint.proto.types.ValidatorSet validator_set = 2 [
    (gogoproto.moretags) = "yaml:\"validator_set\""
  ];
}

// Fraction defines the protobuf message type for tmmath.Fraction
message Fraction {
  int64 numerator   = 1;
  int64 denominator = 2;
}
